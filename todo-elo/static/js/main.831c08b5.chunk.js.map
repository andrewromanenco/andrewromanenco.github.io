{"version":3,"sources":["logo.svg","EloToDoInput.js","EloToDoVote.js","EloToDoList.js","EloToDo.js","App.js","reportWebVitals.js","index.js"],"names":["EloToDoInput","props","state","value","tooShortListError","handleChange","bind","processInput","event","this","setState","target","tasks","match","filteredTasks","filter","task","trim","length","createEloList","Alert","severity","AlertTitle","TextField","label","onChange","multiline","fullWidth","rows","Button","variant","color","onClick","React","Component","EloToDoVote","votedA","a","votedB","b","EloToDoList","items","pair","getIndices","showRatings","vote","handleChangeShowRatings","Math","floor","random","winner","loser","rating","pow","name","checked","sortedItems","sort","reset","Switch","inputProps","TableContainer","Table","aria-label","style","width","TableHead","TableRow","TableCell","TableBody","map","row","toFixed","EloToDo","view","list","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.831c08b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nclass EloToDoInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      tooShortListError: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.processInput = this.processInput.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value, tooShortListError: false});\n  }\n\n  processInput() {\n    const tasks = this.state.value.match(/[^\\r\\n]+/g);\n    if (!tasks) {\n      this.setState({tooShortListError: true});\n      return;\n    }\n    const filteredTasks = tasks.filter(task => task.trim().length > 0);\n    if (filteredTasks.length > 4) {\n      this.props.createEloList(filteredTasks);\n    } else {\n      this.setState({tooShortListError: true});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Alert severity=\"info\">\n          <AlertTitle>Elo rating for ToDo tasks list</AlertTitle>\n          Enter a list of tasks. One per line and at least 5 of them.\n        </Alert>\n        <TextField\n          label=\"One task per line\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          multiline={true}\n          fullWidth={true}\n          rows=\"10\" /><br/>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.processInput}>Run elo rating</Button>\n          {this.state.tooShortListError && <Alert severity=\"error\">List is too short, enter at least 5 tasks.</Alert>}\n        </div>\n    );\n  }\n}\n\nexport default EloToDoInput;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass EloToDoVote extends React.Component {\n  render() {\n    return (\n      <div>\n        <Button variant=\"contained\" onClick={this.props.votedA}>{this.props.a}</Button><br/>\n        <Button variant=\"contained\" onClick={this.props.votedB}>{this.props.b}</Button>\n      </div>\n    );\n  }\n}\n\nexport default EloToDoVote;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport EloToDoVote from './EloToDoVote';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Switch from '@material-ui/core/Switch';\n\nclass EloToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: this.props.items,\n      pair: this.getIndices(this.props.items),\n      showRatings: true\n    }\n    this.vote = this.vote.bind(this);\n    this.handleChangeShowRatings = this.handleChangeShowRatings.bind(this);\n  }\n\n  getIndices(items) {\n    const a = Math.floor(Math.random() * items.length);\n    let b = a;\n    while (a === b) {\n      b = Math.floor(Math.random() * items.length);\n    }\n    return [a, b]\n  }\n\n  vote(winner, loser) {\n    return () => {\n      const items = this.state.items;\n      items[winner].rating = items[winner].rating + 40*(1-1/(1+Math.pow(10, (items[loser].rating - items[winner].rating)/400)))\n      items[loser].rating = items[loser].rating + 40*(0-1/(1+Math.pow(10, (items[winner].rating - items[loser].rating)/400)))\n      this.setState({\n        items: items,\n        pair: this.getIndices(this.state.items)\n      });\n    }\n  }\n\n  handleChangeShowRatings(event) {\n    this.setState({\n      [event.target.name]: event.target.checked\n    });\n  }\n\n  render() {\n    const sortedItems = [...this.state.items].sort(function(a, b) {\n      return b.rating - a.rating;\n    });\n    return (\n      <div>\n        <Alert severity=\"info\">\n          <AlertTitle>Elo rating for ToDo tasks list</AlertTitle>\n          The app presents two random tasks. You should pick the more important\n          one. Keep running till your list looks alright to you.\n          To enter new tasks <Button variant=\"contained\" color=\"secondary\" onClick={this.props.reset}>RESET THIS LIST</Button>\n          <br/><br/>\n          <Switch\n            checked={this.state.showRatings}\n            onChange={this.handleChangeShowRatings}\n            name=\"showRatings\"\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n           /> Show ratings\n        </Alert>\n        <EloToDoVote\n          a={this.state.items[this.state.pair[0]].task}\n          b={this.state.items[this.state.pair[1]].task}\n          votedA={this.vote(this.state.pair[0], this.state.pair[1])}\n          votedB={this.vote(this.state.pair[1], this.state.pair[0])}\n          />\n        <TableContainer>\n          <Table aria-label=\"simple table\">\n            <colgroup>\n              {this.state.showRatings && <col style={{width:'10%'}}/>}\n              <col style={{width:'90%'}}/>\n           </colgroup>\n            <TableHead>\n              <TableRow>\n                {this.state.showRatings && <TableCell>Rating</TableCell>}\n                <TableCell>Task</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {sortedItems.map((row) => (\n                <TableRow key={row.task}>\n                  {this.state.showRatings && <TableCell>{row.rating.toFixed(2)}</TableCell>}\n                  <TableCell>{row.task}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    );\n  }\n}\n\nexport default EloToDoList;\n","import React from 'react';\nimport EloToDoInput from './EloToDoInput';\nimport EloToDoList from './EloToDoList';\n\nclass EloToDo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: 'input'\n    };\n    this.createEloList = this.createEloList.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  createEloList(list) {\n    const items = list.map(item => {\n      return {\n        rating: 1000,\n        task: item.trim()\n      }\n    });\n    this.setState({items: items, view: 'elo'});\n  }\n\n  reset() {\n    this.setState({\n      view:'input',\n      items: []\n    });\n  }\n\n  render() {\n    return (\n        <div>\n      {this.state.view === \"input\" &&\n        <EloToDoInput createEloList={this.createEloList}/>}\n      {this.state.view === \"elo\" &&\n        <EloToDoList items={this.state.items} reset={this.reset} />}\n        </div>\n      );\n  }\n}\n\nexport default EloToDo;\n","import logo from './logo.svg';\nimport './App.css';\nimport EloToDo from './EloToDo'\n\nfunction App() {\n  return (\n    <EloToDo />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}